How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was because someone changed the argument from the previous one that I was able to see that 
    the new entry was erroneous

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I could revert changes made to code if I break something in the new version, or if my change
    was less efficient then the old version I could also revert back to that.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are obviously the greater control & flexibility one would have over the file(s) version.
    	Also no commits that would break the code, like only commiting half the changes.
    Cons are that changes made could potentially be lost if one does not commit, and something goes wrong with the computer

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Ease to roll back changes, and like the pro above, greater control flexibility over the files.

How can you use the commands git log and git diff to view the history of files?

    With git log, we can see a list of all the commits made, from old to new as well as the commit ID
    and the message by the commiter & date and time.

    With git diff, we can compare two commits to each other and see the differences between them.

How might using version control make you more confident to make changes that
could break something?

    Easily roll back to a version that does not have an error, or worked better

Now that you have your workspace set up, what do you want to try using Git for?

    Android app development obviously
